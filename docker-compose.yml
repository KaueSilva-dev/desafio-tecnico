version: "3.9"
services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${DB_USER:-app}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-app}
      POSTGRES_DB: ${DB_NAME:-appdb}
    ports:
      - "5432:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-app} -d ${DB_NAME:-appdb}"]
      interval: 5s
      timeout: 5s
      retries: 10

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10

  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"

  api:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      APP_ENV: ${APP_ENV:-dev}
      APP_PORT: ${APP_PORT:-8080}
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: ${DB_USER:-app}
      DB_PASSWORD: ${DB_PASSWORD:-app}
      DB_NAME: ${DB_NAME:-appdb}
      DB_SSLMODE: disable
      JWT_SECRET: ${JWT_SECRET:-supersecret}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-1h}
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
      EMAIL_QUEUE_NAME: emails
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
      SMTP_USER:
      SMTP_PASS:
      SMTP_FROM: "no-reply@example.com"
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      mailhog:
        condition: service_started
    ports:
      - "8080:8080"

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    environment:
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
      EMAIL_QUEUE_NAME: emails
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
      SMTP_USER:
      SMTP_PASS:
      SMTP_FROM: "no-reply@example.com"
    depends_on:
      rabbitmq:
        condition: service_healthy
      mailhog:
        condition: service_started

volumes:
  dbdata: